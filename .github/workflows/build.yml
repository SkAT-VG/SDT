name: build

on:
  push:
    branches:
      - master
      - develop
      - feature/singlemakefile
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target: [
          linux,
          win32,
          win64,
          macosx
        ]
        include:
        - container: ""
        - runs_on: ubuntu-latest
        - mingw: false
        - pd: true
        - max: true
        - target: linux
          container: ubuntu:16.04
          max: false
        - target: win32
          mingw: true
        - target: win64
          mingw: true
          pd: false
        - target: macosx
          runs_on: macos-latest
          pd: false
          max: false
    runs-on: ${{ matrix.runs_on }}
    container: ${{ matrix.container }}
    env:
      RUNS_ON_UBUNTU: ${{ (matrix.container && startsWith(matrix.container, 'ubuntu')) || startsWith(matrix.runs_on, 'ubuntu') || '' }}
      SUDO: ${{ !matrix.container && startsWith(matrix.runs_on, 'ubuntu') && 'sudo' || '' }}
    steps:
    - name: Update packages
      if: ${{ env.RUNS_ON_UBUNTU }}
      run: |
        ${{ env.SUDO }} apt-get -y update
    - name: Install git and make
      if: ${{ env.RUNS_ON_UBUNTU && matrix.container }}
      run: |
        ${{ env.SUDO }} apt-get -y install software-properties-common
        ${{ env.SUDO }} add-apt-repository -y ppa:git-core/ppa
        ${{ env.SUDO }} apt-get -y update
        ${{ env.SUDO }} apt-get -y install git build-essential
    - name: Install mingw compiler
      if: ${{ env.RUNS_ON_UBUNTU && matrix.mingw }}
      run: ${{ env.SUDO }} apt-get -y install mingw-w64
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Build everything
      run: make TARGET=${{ matrix.target }} -j16
    - name: Prepare package directory
      run: mkdir SoundDesignToolkit
    - name: Package library
      run: make TARGET=${{ matrix.target }} install_core DSTDIR=SoundDesignToolkit
    - name: Upload library
      uses: actions/upload-artifact@v3
      with:
        name: SDT_${{ matrix.target }}_lib
        path: SoundDesignToolkit
    - name: Reset package directory
      run: rm -rf SoundDesignToolkit && mkdir SoundDesignToolkit
    - name: Package Pd library
      if: ${{ matrix.pd }}
      run: make TARGET=${{ matrix.target }} install_pd DSTDIR=SoundDesignToolkit
    - name: Upload Pd library
      if: ${{ matrix.pd }}
      uses: actions/upload-artifact@v3
      with:
        name: SDT_${{ matrix.target }}_pd
        path: SoundDesignToolkit
    - name: Reset package directory
      run: rm -rf SoundDesignToolkit && mkdir SoundDesignToolkit
    - name: Package Max library
      if: ${{ matrix.max }}
      run: make TARGET=${{ matrix.target }} install_max DSTDIR=SoundDesignToolkit
    - name: Upload Max library
      if: ${{ matrix.max }}
      uses: actions/upload-artifact@v3
      with:
        name: SDT_${{ matrix.target }}_max
        path: SoundDesignToolkit
